{
    // Stream selection format.
    // For example "134+140/mp4+m4a/bestvideo+bestaudio"
    // would prefer 360p video + AAC 128kpbs audio to be muxed with ffmpeg, 
    // otherwise fallback to "best" according to yt-dlp's logic
    //"format": "mp4+m4a/bestvideo+bestaudio",
    // Alternatively, using format sort should be more flexible: 
    "format_sort": ["res:480","+codec:h264:m4a"],

    // Path to your cookies (this value is replaced by the value 
    // submitted via the --cookies parameter to livestream_saver)
    // "cookiefile": "",
    

    // Pass the PO token to the extractor (avoid IP blocking)
    // See this page for more information
    // https://github.com/yt-dlp/yt-dlp/wiki/Extractors
    // You can load one PO_TOKEN value into environment variables with 
    // export PO_TOKEN="your_token"
    // and it will be automatically replaced in the config.
    "extractor-args": "youtube:player-client=web,default;po_token=web+<PO_TOKEN_VALUE>",

    // Do not stop on download/postprocessing errors.
    // Can be "only_download" to ignore only download errors.
    // Default is "only_download" for CLI, but False for API
    // "ignoreerrors": "only_download",
    
    "outtmpl": "%(release_date)s [%(uploader)s] %(title)s [%(height)s][%(id)s].%(ext)s",
     
    // Need to test this one, but it's not needed in our case anyway:
    // "match_filter": 'is_live',

    // "wait_for_video": (60, 120),
    
    "live_from_start": true,

    "writethumbnail": true,

    "fragment_retries": 50,
    
    // "wait_for_video" = (60, 120),
    
    "postprocessors": [
        {
            // --embed-thumbnail
            "key": "EmbedThumbnail",
            // already_have_thumbnail = True prevents the file from being deleted after embedding
            "already_have_thumbnail": true
        },
        {
            "key": "FFmpegMetadata",
            "add_chapters": false,
            "add_metadata": true,
            "add_infojson": false
        }
    ]
}
